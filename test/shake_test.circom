pragma circom 2.1.0;

include "../circuits/sha3/sha3_bytes.circom";

template Test32Zeros() {
    log("\n******************** TESTING shake256 input 32 zeros ********************\n\n");

    var should_be_out[192] = [192, 63, 204, 129, 231, 54, 9, 135, 91, 59, 152, 203, 148, 28, 120, 6, 88, 90, 247, 206, 54, 118, 190, 26, 197, 245, 239, 150, 220, 213, 44, 90, 232, 149, 80, 156, 106, 236, 108, 53, 47, 144, 119, 126, 255, 153, 132, 209, 197, 45, 48, 179, 77, 159, 181, 8, 169, 209, 84, 83, 69, 106, 151, 75, 246, 13, 182, 56, 181, 42, 147, 133, 70, 38, 234, 38, 148, 9, 163, 38, 80, 166, 29, 66, 168, 198, 26, 138, 57, 39, 124, 235, 38, 134, 156, 208, 117, 219, 36, 37, 5, 58, 82, 96, 237, 236, 243, 50, 103, 253, 233, 120, 238, 142, 68, 218, 138, 237, 12, 47, 243, 186, 21, 132, 130, 91, 199, 243, 37, 178, 10, 132, 230, 192, 24, 106, 33, 94, 136, 52, 7, 154, 38, 17, 141, 114, 80, 186, 134, 169, 70, 9, 176, 125, 194, 195, 231, 121, 50, 51, 123, 156, 60, 82, 234, 143, 23, 196, 25, 135, 6, 180, 76, 126, 124, 225, 58, 19, 143, 213, 183, 107, 109, 131, 196, 22, 36, 173, 78, 248, 71, 124];

    var should_be_out_bits[192 * 8];
    for (var i = 0; i < 192; i++) {
        for (var j = 0; j < 8; j++) {
            should_be_out_bits[i * 8 + j] = (should_be_out[i] >> j) & 1;
        }
    }

    component shake = SHAKE256(264, 1536);
    for (var i = 0; i < 264; i++) {
        shake.inp[i] <== 0;
    }

    var RESULT = 1;
    for (var i=0; i<1536; i++) {
        RESULT = RESULT && (shake.out[i] == should_be_out_bits[i]);
    }

    signal output res <-- RESULT;
}

template TestAll() {
    var total = 1;
    var res;

    res = Test32Zeros()();

    log("********************\n", "TOTAL RESULT: ", total, "\n********************\n");
}

component main = TestAll();