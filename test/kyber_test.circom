pragma circom 2.1.0;

include "../circuits/kyber.circom";
include "../circuits/sha3/sha3_bits.circom";

template TestEnc() {
    log("\n********** TEST KYBER **********\n");
    var k = 2;
    var n = 256;

    var r[k][n] = [
        [0, 0, 2, 0, 1, 0, 0, 1, 0, 3328, 3326, 1, 3328, 3328, 3327, 3328, 0, 3328, 1, 0, 2, 3328, 1, 1, 1, 3328, 3328, 1, 0, 3327, 0, 2, 2, 2, 0, 3328, 1, 3328, 0, 0, 3328, 3327, 2, 3327, 1, 1, 2, 2, 3328, 3328, 1, 0, 0, 3327, 1, 0, 1, 3327, 1, 0, 3328, 0, 3327, 3328, 2, 1, 1, 0, 0, 0, 3328, 2, 0, 0, 3328, 3328, 0, 1, 0, 0, 2, 3328, 0, 1, 1, 3328, 1, 2, 0, 0, 1, 0, 3328, 0, 3328, 0, 2, 3328, 0, 3327, 1, 3328, 3328, 1, 1, 3328, 1, 0, 1, 0, 0, 3328, 3327, 3328, 3328, 2, 0, 1, 0, 0, 3327, 0, 0, 0, 2, 3328, 0, 3328, 0, 0, 1, 0, 1, 0, 3328, 1, 0, 1, 1, 3328, 3328, 2, 1, 0, 2, 0, 1, 3327, 3326, 3327, 0, 1, 1, 3328, 0, 0, 0, 0, 3327, 1, 0, 0, 0, 2, 1, 0, 3326, 1, 3, 2, 1, 0, 3328, 3328, 0, 0, 1, 2, 0, 2, 3328, 2, 0, 2, 3328, 0, 0, 1, 3328, 3328, 0, 1, 1, 0, 3, 0, 3327, 3328, 3327, 3328, 2, 1, 0, 3328, 3328, 0, 3327, 3327, 2, 2, 2, 0, 0, 3328, 3, 2, 3327, 3328, 1, 3327, 2, 0, 1, 3328, 3328, 3328, 3327, 1, 3328, 3328, 0, 1, 3327, 2, 0, 1, 1, 3327, 3327, 0, 1, 0, 1, 0, 2, 0, 3328, 2, 0, 3328, 3328, 1, 3326, 1, 1, 1], 
        [1, 2, 1, 2, 1, 0, 3328, 2, 3328, 3327, 2, 1, 1, 3328, 3327, 3328, 0, 1, 3328, 2, 2, 0, 1, 0, 3327, 0, 1, 0, 1, 3328, 3327, 3327, 1, 1, 3328, 0, 0, 3327, 0, 3327, 3328, 2, 3328, 3328, 2, 3328, 0, 3328, 0, 3328, 0, 3327, 1, 2, 3328, 3327, 3326, 2, 2, 3328, 3327, 1, 3328, 0, 2, 2, 2, 1, 3328, 0, 2, 3328, 0, 0, 0, 0, 2, 3327, 2, 1, 3327, 3328, 0, 3328, 3327, 1, 1, 2, 0, 3326, 1, 0, 3327, 3328, 0, 3328, 2, 0, 0, 3328, 3328, 3328, 1, 3328, 2, 2, 3327, 0, 1, 3327, 3327, 0, 0, 2, 1, 3328, 1, 0, 3328, 0, 3328, 3328, 0, 3328, 1, 0, 0, 3328, 3328, 3328, 0, 2, 0, 1, 0, 0, 1, 0, 2, 3328, 3328, 0, 2, 1, 3327, 3328, 1, 3328, 2, 0, 3327, 3327, 0, 3326, 1, 3328, 0, 0, 3327, 0, 0, 2, 3328, 0, 3328, 1, 0, 3328, 0, 3328, 2, 1, 0, 3328, 2, 1, 0, 1, 0, 3327, 0, 3, 3327, 3328, 0, 3327, 0, 3328, 0, 0, 0, 2, 0, 0, 0, 1, 3328, 1, 0, 1, 0, 3328, 0, 0, 1, 0, 3327, 0, 0, 3327, 3, 2, 0, 3328, 2, 3328, 0, 1, 3326, 0, 0, 3328, 2, 3328, 0, 3328, 1, 3328, 3328, 1, 0, 0, 0, 3328, 1, 1, 0, 2, 0, 3328, 3328, 1, 3328, 0, 0, 3328, 3328, 1, 0, 0, 1, 2, 0, 0, 3327, 3328]
    ];

    var e1[k][n] = [
        [3328, 1, 2, 3328, 3328, 1, 1, 3328, 3328, 1, 0, 0, 1, 0, 1, 0, 3328, 3328, 2, 1, 3328, 2, 3327, 0, 3328, 0, 1, 3328, 3328, 0, 3328, 1, 1, 3328, 0, 0, 0, 0, 1, 1, 1, 3328, 3328, 0, 0, 3328, 0, 0, 0, 3327, 1, 1, 0, 0, 2, 1, 3328, 3327, 3328, 3327, 3328, 0, 0, 0, 3328, 0, 3328, 1, 0, 1, 2, 0, 1, 0, 2, 3328, 0, 2, 1, 1, 0, 2, 3327, 0, 3328, 1, 0, 3328, 0, 0, 0, 2, 0, 1, 0, 1, 3328, 1, 3328, 0, 0, 0, 3328, 2, 0, 0, 3328, 0, 1, 0, 3328, 3327, 0, 3328, 3327, 0, 3327, 0, 3328, 2, 3328, 3328, 1, 0, 1, 0, 0, 1, 3328, 0, 3328, 3328, 0, 1, 3328, 0, 1, 0, 0, 0, 0, 1, 3328, 3327, 0, 3328, 1, 3327, 1, 3328, 3328, 0, 0, 3328, 0, 0, 0, 1, 1, 0, 3327, 1, 2, 1, 1, 3327, 0, 1, 3328, 3328, 3327, 3328, 0, 0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0, 2, 0, 0, 1, 2, 3327, 3328, 1, 0, 3328, 0, 0, 0, 1, 0, 0, 2, 0, 3328, 1, 0, 0, 1, 3328, 1, 3328, 3328, 0, 3328, 0, 3328, 3328, 1, 1, 2, 3328, 2, 0, 0, 3327, 0, 3328, 0, 3328, 1, 1, 0, 3328, 0, 1, 3328, 3328, 1, 0, 1, 1, 0, 3328, 3328, 1, 1, 0, 1, 3328, 1, 0, 3327, 3328, 0, 3328, 3328, 0], 
        [3328, 2, 1, 3327, 1, 2, 0, 0, 2, 0, 0, 0, 1, 1, 3327, 3328, 0, 0, 0, 3328, 3328, 0, 3327, 1, 0, 0, 1, 0, 0, 0, 1, 3328, 3327, 0, 0, 0, 0, 3327, 1, 1, 1, 3328, 1, 3328, 3328, 0, 3328, 0, 0, 0, 0, 3328, 3328, 1, 3328, 3328, 0, 0, 0, 0, 2, 2, 3328, 0, 0, 0, 3328, 0, 0, 1, 0, 1, 0, 0, 3328, 3328, 3328, 1, 0, 3328, 3328, 1, 2, 0, 3328, 0, 0, 0, 0, 0, 3327, 0, 3328, 0, 0, 3328, 3328, 3328, 1, 0, 0, 3327, 3328, 3328, 0, 3328, 0, 0, 0, 2, 3328, 2, 1, 3328, 0, 3328, 0, 2, 0, 3328, 0, 0, 3327, 0, 2, 0, 0, 1, 1, 1, 0, 0, 3328, 3328, 3327, 0, 1, 2, 0, 1, 3328, 3328, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 3328, 3327, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 3328, 3328, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3328, 3327, 2, 0, 0, 1, 1, 1, 3328, 3328, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 3327, 2, 0, 3327, 1, 1, 3328, 3328, 3328, 1, 1, 1, 0, 0, 1, 0, 3328, 1, 0, 1, 0, 3328, 0, 3328, 2, 3327, 1, 0, 1, 0, 0, 1, 1, 3328, 3328, 0, 1, 0, 3328, 0, 0, 1, 3328, 0, 0, 3328, 3328, 1, 3328, 1, 0, 0, 3328, 1, 3328, 0, 0, 0]
    ];
    
    var e2[n] = [1, 3328, 3327, 3328, 1, 0, 0, 0, 3327, 1, 3327, 0, 0, 3328, 3328, 3328, 3328, 1, 1, 0, 1, 3328, 3327, 3328, 0, 0, 0, 0, 3328, 1, 0, 3328, 0, 0, 0, 1, 0, 2, 1, 3328, 3328, 3328, 3328, 0, 3328, 3328, 0, 1, 3328, 0, 3327, 2, 2, 1, 3328, 1, 1, 0, 1, 3328, 1, 0, 3328, 1, 0, 0, 1, 3328, 2, 1, 3328, 3327, 3328, 0, 2, 1, 0, 0, 0, 1, 1, 1, 0, 0, 3327, 1, 3328, 1, 3328, 3328, 3328, 3328, 1, 0, 1, 0, 3328, 3328, 0, 0, 3328, 3328, 3328, 0, 1, 0, 0, 0, 3328, 1, 1, 0, 3328, 1, 3328, 0, 2, 2, 1, 3328, 3328, 0, 3328, 3328, 3328, 1, 3328, 1, 0, 0, 1, 2, 3328, 0, 2, 1, 0, 1, 3327, 0, 3328, 1, 0, 0, 1, 0, 0, 3328, 1, 1, 3328, 3328, 3328, 3328, 3328, 3327, 1, 0, 3328, 3327, 0, 0, 0, 0, 0, 0, 0, 3328, 0, 0, 3327, 0, 1, 3328, 3328, 1, 1, 3328, 0, 3328, 0, 0, 2, 3328, 2, 0, 0, 0, 1, 1, 1, 0, 3328, 3327, 0, 3328, 3328, 3328, 0, 0, 3328, 0, 0, 1, 3327, 3328, 0, 3327, 3328, 2, 2, 0, 0, 3327, 1, 1, 0, 3328, 3328, 3328, 3327, 3328, 1, 0, 0, 3327, 1, 3328, 3328, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 3328, 0, 0, 3328, 3328, 0, 0, 0, 3328, 0, 3327, 2, 1, 0, 3328, 1, 1];

    var m[n] = [1665, 1665, 0, 1665, 0, 1665, 1665, 0, 1665, 0, 0, 1665, 1665, 1665, 1665, 0, 0, 1665, 0, 0, 0, 1665, 1665, 0, 1665, 0, 1665, 0, 0, 1665, 1665, 0, 0, 1665, 0, 0, 1665, 1665, 1665, 0, 0, 0, 0, 0, 0, 1665, 0, 0, 1665, 0, 0, 1665, 0, 1665, 1665, 0, 1665, 1665, 0, 0, 1665, 1665, 1665, 0, 0, 0, 0, 0, 0, 1665, 0, 0, 1665, 1665, 0, 0, 0, 1665, 1665, 0, 1665, 1665, 1665, 1665, 0, 1665, 1665, 0, 1665, 1665, 1665, 1665, 0, 1665, 1665, 0, 0, 0, 1665, 1665, 0, 1665, 1665, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

    var c1[2][n];
    var c2[n]; 
    
    (c1,c2) = kyber_enc()(r,e1,e2,m);

    var should_be_c1[2][n];
    should_be_c1[0] = [153, 301, 692, 759, 1001, 303, 704, 359, 790, 136, 763, 411, 931, 721, 887, 76, 677, 340, 652, 890, 671, 397, 940, 809, 302, 463, 916, 811, 411, 681, 859, 165, 491, 227, 338, 214, 641, 970, 325, 515, 192, 20, 903, 509, 448, 883, 955, 135, 429, 107, 765, 1, 976, 688, 868, 393, 560, 556, 178, 511, 441, 865, 677, 449, 666, 524, 899, 206, 20, 140, 400, 426, 230, 974, 961, 175, 279, 801, 600, 733, 604, 702, 462, 768, 720, 653, 1007, 483, 726, 786, 856, 944, 105, 393, 987, 400, 673, 376, 308, 593, 134, 447, 550, 391, 971, 673, 304, 1007, 564, 806, 430, 127, 492, 827, 591, 100, 540, 613, 847, 484, 664, 595, 832, 94, 723, 351, 408, 278, 197, 948, 795, 475, 975, 749, 1009, 205, 334, 723, 412, 230, 277, 233, 426, 167, 840, 694, 34, 986, 624, 300, 988, 185, 1017, 793, 448, 836, 623, 417, 801, 722, 248, 982, 750, 735, 959, 751, 446, 959, 870, 662, 597, 872, 682, 826, 436, 833, 806, 645, 372, 59, 305, 805, 275, 602, 771, 706, 879, 294, 743, 963, 405, 783, 950, 170, 688, 78, 1002, 850, 217, 567, 949, 234, 350, 851, 812, 167, 886, 906, 99, 740, 45, 370, 366, 528, 75, 8, 996, 960, 25, 723, 965, 531, 895, 556, 585, 891, 779, 408, 1019, 486, 316, 56, 205, 674, 987, 859, 486, 767, 410, 631, 791, 623, 804, 531, 656, 417, 1010, 811, 847, 815, 279, 412, 775, 397, 90, 64];
    should_be_c1[1] = [850, 601, 938, 567, 999, 698, 925, 106, 381, 969, 69, 289, 760, 403, 797, 352, 460, 644, 470, 599, 399, 952, 623, 483, 517, 169, 130, 39, 60, 627, 128, 821, 853, 569, 934, 70, 940, 237, 484, 95, 184, 732, 990, 219, 662, 657, 146, 273, 745, 811, 134, 171, 240, 539, 869, 124, 217, 876, 177, 926, 201, 417, 647, 821, 559, 568, 891, 797, 408, 268, 954, 1021, 16, 236, 165, 560, 215, 953, 173, 259, 344, 757, 679, 985, 53, 692, 34, 172, 848, 562, 432, 50, 984, 835, 301, 81, 649, 197, 38, 1017, 658, 187, 181, 102, 458, 584, 453, 122, 560, 504, 38, 594, 709, 479, 49, 846, 843, 934, 627, 295, 800, 293, 636, 907, 256, 318, 203, 446, 18, 769, 771, 307, 455, 532, 335, 41, 885, 963, 987, 838, 675, 356, 914, 514, 566, 1013, 522, 861, 662, 802, 584, 411, 316, 737, 912, 522, 110, 616, 87, 519, 569, 741, 482, 767, 64, 724, 934, 133, 900, 336, 213, 390, 636, 852, 394, 899, 102, 183, 397, 204, 960, 489, 312, 848, 730, 682, 660, 417, 314, 763, 860, 790, 845, 773, 293, 575, 451, 352, 210, 247, 354, 15, 583, 980, 448, 248, 277, 637, 902, 442, 469, 691, 447, 373, 48, 734, 118, 945, 228, 1023, 9, 648, 163, 756, 831, 855, 338, 425, 842, 220, 771, 493, 315, 267, 217, 948, 852, 631, 303, 707, 16, 1017, 908, 723, 603, 500, 356, 670, 973, 798, 632, 264, 515, 603, 623, 344];

    var should_be_c2[n];
    should_be_c2 = [9, 2, 5, 11, 3, 10, 0, 6, 3, 13, 5, 11, 2, 6, 10, 3, 5, 8, 8, 8, 10, 15, 7, 1, 5, 7, 4, 0, 15, 12, 11, 13, 8, 10, 6, 7, 5, 5, 8, 12, 11, 7, 14, 1, 15, 8, 8, 3, 5, 7, 5, 12, 2, 15, 13, 12, 2, 8, 13, 2, 8, 12, 13, 4, 3, 3, 8, 3, 15, 1, 9, 2, 7, 9, 6, 7, 6, 7, 2, 10, 12, 12, 1, 4, 0, 7, 3, 15, 13, 6, 14, 8, 0, 14, 1, 5, 10, 15, 7, 6, 9, 1, 11, 5, 9, 0, 13, 11, 9, 6, 7, 1, 11, 4, 15, 5, 7, 10, 5, 9, 1, 3, 7, 6, 12, 4, 9, 6, 10, 4, 3, 4, 11, 4, 3, 0, 11, 2, 7, 6, 14, 1, 13, 9, 7, 4, 2, 2, 7, 6, 8, 8, 6, 12, 5, 14, 14, 12, 6, 11, 11, 0, 15, 15, 6, 15, 7, 15, 0, 1, 13, 13, 14, 8, 8, 2, 9, 8, 9, 5, 15, 3, 7, 1, 7, 9, 15, 6, 15, 1, 10, 4, 6, 4, 6, 2, 2, 13, 0, 15, 2, 1, 1, 13, 14, 3, 15, 6, 4, 5, 11, 12, 7, 9, 3, 12, 4, 13, 2, 1, 11, 12, 3, 5, 2, 0, 2, 6, 8, 7, 9, 4, 11, 15, 3, 0, 12, 13, 1, 15, 2, 10, 8, 0, 12, 4, 7, 3, 3, 10, 9, 12, 6, 7, 10, 2];

    var RESULT = 1;
    for (var i=0; i<n; i++) {
        RESULT = RESULT && (should_be_c1[0][i] == c1[0][i]);
        RESULT = RESULT && (should_be_c1[1][i] == c1[1][i]);
        RESULT = RESULT && (should_be_c2[i] == c2[i]);
    }

    log("RESULT: ", RESULT, "\n");
    signal output result <-- RESULT;
}

template TestSamplePolyCBD() {
    log("\n********** TEST SamplePolyCBD **********\n");

    var n = 256;
    var k = 2;
    
    var eta1 = 3;
    var eta2 = 2;

    var l1 = 2*eta1*n;
    var l2 = 2*eta2*n;

    var randomness[33];
    for (var i = 0; i < 32; i++) {
        randomness[i] = 0; // use random seed here
    }
    randomness[32] = 0;

    var shake_input_bits[5][33*8];
    for (var k = 0; k < 5; k++) {
        for (var i = 0; i < 33; i++) {
            for (var j = 0; j < 8; j++) {
                shake_input_bits[k][i*8+j] = (randomness[i] >> j) & 1;
            }
        }
    }

    var prf_r[2][l1]; 
    prf_r[0] = SHAKE256(33*8, l1)(shake_input_bits[0]);

    shake_input_bits[1][32*8] = 1;
    prf_r[1] = SHAKE256(33*8, l1)(shake_input_bits[1]);

    var prf_e1[2][l2];
    shake_input_bits[2][32*8+1] = 1;
    prf_e1[0] = SHAKE256(33*8, l2)(shake_input_bits[2]);
    
    shake_input_bits[3][32*8] = 1;
    shake_input_bits[3][32*8+1] = 1;
    prf_e1[1] = SHAKE256(33*8, l2)(shake_input_bits[3]);

    var prf_e2[l2];
    shake_input_bits[4][32*8+2] = 1;
    prf_e2 = SHAKE256(33*8, l2)(shake_input_bits[4]);

    var r[k][n];
    r[0] = samplePolyCBD(l1,eta1)(prf_r[0]);
    r[1] = samplePolyCBD(l1,eta1)(prf_r[1]);

    var e1[k][n];
    e1[0] = samplePolyCBD(l2,eta2)(prf_e1[0]);
    e1[1] = samplePolyCBD(l2,eta2)(prf_e1[1]);

    var e2[n];
    e2 = samplePolyCBD(l2,eta2)(prf_e2);

    var should_be_r[k][n] = [
        [0, 0, 2, 0, 1, 0, 0, 1, 0, 3328, 3326, 1, 3328, 3328, 3327, 3328, 0, 3328, 1, 0, 2, 3328, 1, 1, 1, 3328, 3328, 1, 0, 3327, 0, 2, 2, 2, 0, 3328, 1, 3328, 0, 0, 3328, 3327, 2, 3327, 1, 1, 2, 2, 3328, 3328, 1, 0, 0, 3327, 1, 0, 1, 3327, 1, 0, 3328, 0, 3327, 3328, 2, 1, 1, 0, 0, 0, 3328, 2, 0, 0, 3328, 3328, 0, 1, 0, 0, 2, 3328, 0, 1, 1, 3328, 1, 2, 0, 0, 1, 0, 3328, 0, 3328, 0, 2, 3328, 0, 3327, 1, 3328, 3328, 1, 1, 3328, 1, 0, 1, 0, 0, 3328, 3327, 3328, 3328, 2, 0, 1, 0, 0, 3327, 0, 0, 0, 2, 3328, 0, 3328, 0, 0, 1, 0, 1, 0, 3328, 1, 0, 1, 1, 3328, 3328, 2, 1, 0, 2, 0, 1, 3327, 3326, 3327, 0, 1, 1, 3328, 0, 0, 0, 0, 3327, 1, 0, 0, 0, 2, 1, 0, 3326, 1, 3, 2, 1, 0, 3328, 3328, 0, 0, 1, 2, 0, 2, 3328, 2, 0, 2, 3328, 0, 0, 1, 3328, 3328, 0, 1, 1, 0, 3, 0, 3327, 3328, 3327, 3328, 2, 1, 0, 3328, 3328, 0, 3327, 3327, 2, 2, 2, 0, 0, 3328, 3, 2, 3327, 3328, 1, 3327, 2, 0, 1, 3328, 3328, 3328, 3327, 1, 3328, 3328, 0, 1, 3327, 2, 0, 1, 1, 3327, 3327, 0, 1, 0, 1, 0, 2, 0, 3328, 2, 0, 3328, 3328, 1, 3326, 1, 1, 1], 
        [1, 2, 1, 2, 1, 0, 3328, 2, 3328, 3327, 2, 1, 1, 3328, 3327, 3328, 0, 1, 3328, 2, 2, 0, 1, 0, 3327, 0, 1, 0, 1, 3328, 3327, 3327, 1, 1, 3328, 0, 0, 3327, 0, 3327, 3328, 2, 3328, 3328, 2, 3328, 0, 3328, 0, 3328, 0, 3327, 1, 2, 3328, 3327, 3326, 2, 2, 3328, 3327, 1, 3328, 0, 2, 2, 2, 1, 3328, 0, 2, 3328, 0, 0, 0, 0, 2, 3327, 2, 1, 3327, 3328, 0, 3328, 3327, 1, 1, 2, 0, 3326, 1, 0, 3327, 3328, 0, 3328, 2, 0, 0, 3328, 3328, 3328, 1, 3328, 2, 2, 3327, 0, 1, 3327, 3327, 0, 0, 2, 1, 3328, 1, 0, 3328, 0, 3328, 3328, 0, 3328, 1, 0, 0, 3328, 3328, 3328, 0, 2, 0, 1, 0, 0, 1, 0, 2, 3328, 3328, 0, 2, 1, 3327, 3328, 1, 3328, 2, 0, 3327, 3327, 0, 3326, 1, 3328, 0, 0, 3327, 0, 0, 2, 3328, 0, 3328, 1, 0, 3328, 0, 3328, 2, 1, 0, 3328, 2, 1, 0, 1, 0, 3327, 0, 3, 3327, 3328, 0, 3327, 0, 3328, 0, 0, 0, 2, 0, 0, 0, 1, 3328, 1, 0, 1, 0, 3328, 0, 0, 1, 0, 3327, 0, 0, 3327, 3, 2, 0, 3328, 2, 3328, 0, 1, 3326, 0, 0, 3328, 2, 3328, 0, 3328, 1, 3328, 3328, 1, 0, 0, 0, 3328, 1, 1, 0, 2, 0, 3328, 3328, 1, 3328, 0, 0, 3328, 3328, 1, 0, 0, 1, 2, 0, 0, 3327, 3328]
    ];

     var should_be_e1[k][n] = [
        [3328, 1, 2, 3328, 3328, 1, 1, 3328, 3328, 1, 0, 0, 1, 0, 1, 0, 3328, 3328, 2, 1, 3328, 2, 3327, 0, 3328, 0, 1, 3328, 3328, 0, 3328, 1, 1, 3328, 0, 0, 0, 0, 1, 1, 1, 3328, 3328, 0, 0, 3328, 0, 0, 0, 3327, 1, 1, 0, 0, 2, 1, 3328, 3327, 3328, 3327, 3328, 0, 0, 0, 3328, 0, 3328, 1, 0, 1, 2, 0, 1, 0, 2, 3328, 0, 2, 1, 1, 0, 2, 3327, 0, 3328, 1, 0, 3328, 0, 0, 0, 2, 0, 1, 0, 1, 3328, 1, 3328, 0, 0, 0, 3328, 2, 0, 0, 3328, 0, 1, 0, 3328, 3327, 0, 3328, 3327, 0, 3327, 0, 3328, 2, 3328, 3328, 1, 0, 1, 0, 0, 1, 3328, 0, 3328, 3328, 0, 1, 3328, 0, 1, 0, 0, 0, 0, 1, 3328, 3327, 0, 3328, 1, 3327, 1, 3328, 3328, 0, 0, 3328, 0, 0, 0, 1, 1, 0, 3327, 1, 2, 1, 1, 3327, 0, 1, 3328, 3328, 3327, 3328, 0, 0, 1, 0, 2, 2, 1, 0, 0, 2, 2, 0, 2, 0, 0, 1, 2, 3327, 3328, 1, 0, 3328, 0, 0, 0, 1, 0, 0, 2, 0, 3328, 1, 0, 0, 1, 3328, 1, 3328, 3328, 0, 3328, 0, 3328, 3328, 1, 1, 2, 3328, 2, 0, 0, 3327, 0, 3328, 0, 3328, 1, 1, 0, 3328, 0, 1, 3328, 3328, 1, 0, 1, 1, 0, 3328, 3328, 1, 1, 0, 1, 3328, 1, 0, 3327, 3328, 0, 3328, 3328, 0], 
        [3328, 2, 1, 3327, 1, 2, 0, 0, 2, 0, 0, 0, 1, 1, 3327, 3328, 0, 0, 0, 3328, 3328, 0, 3327, 1, 0, 0, 1, 0, 0, 0, 1, 3328, 3327, 0, 0, 0, 0, 3327, 1, 1, 1, 3328, 1, 3328, 3328, 0, 3328, 0, 0, 0, 0, 3328, 3328, 1, 3328, 3328, 0, 0, 0, 0, 2, 2, 3328, 0, 0, 0, 3328, 0, 0, 1, 0, 1, 0, 0, 3328, 3328, 3328, 1, 0, 3328, 3328, 1, 2, 0, 3328, 0, 0, 0, 0, 0, 3327, 0, 3328, 0, 0, 3328, 3328, 3328, 1, 0, 0, 3327, 3328, 3328, 0, 3328, 0, 0, 0, 2, 3328, 2, 1, 3328, 0, 3328, 0, 2, 0, 3328, 0, 0, 3327, 0, 2, 0, 0, 1, 1, 1, 0, 0, 3328, 3328, 3327, 0, 1, 2, 0, 1, 3328, 3328, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 3328, 3327, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 3328, 3328, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3328, 3327, 2, 0, 0, 1, 1, 1, 3328, 3328, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 1, 0, 3327, 2, 0, 3327, 1, 1, 3328, 3328, 3328, 1, 1, 1, 0, 0, 1, 0, 3328, 1, 0, 1, 0, 3328, 0, 3328, 2, 3327, 1, 0, 1, 0, 0, 1, 1, 3328, 3328, 0, 1, 0, 3328, 0, 0, 1, 3328, 0, 0, 3328, 3328, 1, 3328, 1, 0, 0, 3328, 1, 3328, 0, 0, 0]
    ];

    var should_be_e2[n] = [1, 3328, 3327, 3328, 1, 0, 0, 0, 3327, 1, 3327, 0, 0, 3328, 3328, 3328, 3328, 1, 1, 0, 1, 3328, 3327, 3328, 0, 0, 0, 0, 3328, 1, 0, 3328, 0, 0, 0, 1, 0, 2, 1, 3328, 3328, 3328, 3328, 0, 3328, 3328, 0, 1, 3328, 0, 3327, 2, 2, 1, 3328, 1, 1, 0, 1, 3328, 1, 0, 3328, 1, 0, 0, 1, 3328, 2, 1, 3328, 3327, 3328, 0, 2, 1, 0, 0, 0, 1, 1, 1, 0, 0, 3327, 1, 3328, 1, 3328, 3328, 3328, 3328, 1, 0, 1, 0, 3328, 3328, 0, 0, 3328, 3328, 3328, 0, 1, 0, 0, 0, 3328, 1, 1, 0, 3328, 1, 3328, 0, 2, 2, 1, 3328, 3328, 0, 3328, 3328, 3328, 1, 3328, 1, 0, 0, 1, 2, 3328, 0, 2, 1, 0, 1, 3327, 0, 3328, 1, 0, 0, 1, 0, 0, 3328, 1, 1, 3328, 3328, 3328, 3328, 3328, 3327, 1, 0, 3328, 3327, 0, 0, 0, 0, 0, 0, 0, 3328, 0, 0, 3327, 0, 1, 3328, 3328, 1, 1, 3328, 0, 3328, 0, 0, 2, 3328, 2, 0, 0, 0, 1, 1, 1, 0, 3328, 3327, 0, 3328, 3328, 3328, 0, 0, 3328, 0, 0, 1, 3327, 3328, 0, 3327, 3328, 2, 2, 0, 0, 3327, 1, 1, 0, 3328, 3328, 3328, 3327, 3328, 1, 0, 0, 3327, 1, 3328, 3328, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 3328, 0, 0, 3328, 3328, 0, 0, 0, 3328, 0, 3327, 2, 1, 0, 3328, 1, 1];

    // Check if the output is correct
    var RESULT = 1;
    for (var i=0; i<n; i++) {
        RESULT = RESULT && (should_be_r[0][i] == r[0][i]);
        RESULT = RESULT && (should_be_r[1][i] == r[1][i]);
        RESULT = RESULT && (should_be_e1[0][i] == e1[0][i]);
        RESULT = RESULT && (should_be_e1[1][i] == e1[1][i]);
        RESULT = RESULT && (should_be_e2[i] == e2[i]);
    }
    
    log("RESULT: ", RESULT, "\n");
    signal output result <-- RESULT;
}

template TestAll() {
    log("\n******************** TESTING kyber.circom ********************\n\n");

    var total = 1;
    var res;

    res = TestEnc()();
    total = total && res;

    res = TestSamplePolyCBD()();
    total = total && res;

    log("********************\n", "TOTAL RESULT: ", total, "\n********************\n");
}

component main = TestAll();